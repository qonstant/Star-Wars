{"ast":null,"code":"var _jsxFileName = \"/Users/rakymzhan/Desktop/swapi/Star-Wars/src/components/Planets/Planets.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Planet from \"./Planet\";\nimport Loader from \"../Loader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchPlanets = async page => {\n  const res = await fetch(`https://swapi.dev/api/planets/?page=${page}`);\n  return res.json();\n};\nconst Planets = () => {\n  _s();\n  const [page, setPage] = useState(1);\n  const {\n    data,\n    status,\n    isPreviousData\n  } = useQuery([\"planets\", page], () => fetchPlanets(page), {\n    keepPreviousData: true\n  }, {\n    onSuccess: () => console.log(\"Planets Data feched successfully\"),\n    onError: () => console.log(\"Error while fetching data of Planets\")\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), status === \"loading\" ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : status === \"error\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : status === \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination__prev\",\n          onClick: () => setPage(old => Math.min(old - 1, old)),\n          disabled: page === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination__next\",\n          onClick: () => {\n            if (!isPreviousData) {\n              setPage(old => old + 1);\n            }\n          },\n          disabled: !data.next,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), data.results.map(planet => /*#__PURE__*/_jsxDEV(Planet, {\n        planet: planet\n      }, planet.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(Planets, \"vJYnd6CzVdmOWPpIruVLx5BYRUY=\", false, function () {\n  return [useQuery];\n});\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useState","useQuery","Planet","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchPlanets","page","res","fetch","json","Planets","_s","setPage","data","status","isPreviousData","keepPreviousData","onSuccess","console","log","onError","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","old","Math","min","disabled","next","results","map","planet","name","_c","$RefreshReg$"],"sources":["/Users/rakymzhan/Desktop/swapi/Star-Wars/src/components/Planets/Planets.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport Planet from \"./Planet\";\n\nimport Loader from \"../Loader\";\n\nconst fetchPlanets = async (page) => {\n  const res = await fetch(`https://swapi.dev/api/planets/?page=${page}`);\n  return res.json();\n};\n\nconst Planets = () => {\n  const [page, setPage] = useState(1);\n\n\n  const { data, status, isPreviousData } = useQuery(\n    [\"planets\", page],\n    () => fetchPlanets(page),\n    { keepPreviousData: true },\n    {\n      onSuccess: () => console.log(\"Planets Data feched successfully\"),\n      onError: () => console.log(\"Error while fetching data of Planets\"),\n    }\n  );\n\n  return (\n    <>\n      <h2>Planets</h2>\n\n      {status === \"loading\" ? (\n        <Loader />\n      ) : status === \"error\" ? (\n        <div> Error fetching data</div>\n      ) : status === \"success\" ? (\n        <div>\n          <div className=\"pagination\">\n            <button\n              className=\"pagination__prev\"\n              onClick={() => setPage((old) => Math.min(old - 1, old))}\n              disabled={page === 1}\n            >\n              Previous\n            </button>\n            <span>{page}</span>\n            <button\n              className=\"pagination__next\"\n              onClick={() => {\n                if (!isPreviousData) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={!data.next}\n            >\n              Next\n            </button>\n          </div>\n\n          {data.results.map((planet) => (\n            <Planet key={planet.name} planet={planet} />\n          ))}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Planets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}